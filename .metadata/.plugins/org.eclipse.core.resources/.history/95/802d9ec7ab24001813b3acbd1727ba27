package com.troy.hacjtj.base.account;

import java.beans.XMLDecoder;
import java.beans.XMLEncoder;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

public class SerializationManager {

	public static <T> T readObject0(File file, Class<T> clazz) throws FileNotFoundException {
		FileInputStream stream = new FileInputStream(file);
		return readObject0(stream, clazz);
	}

	public static <T> T readObject0(InputStream stream, Class<T> clazz) {
		try (XMLDecoder coder = new XMLDecoder(stream)) {
			Object obj = coder.readObject();
			if (clazz.isAssignableFrom(obj.getClass()))
				return (T) obj;
			else
				throw new RuntimeException("Invalid types! Requested " + clazz + " but read " + obj.getClass());
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

	public static <T> void writeObject0(T obj, File file) throws FileNotFoundException {
		FileOutputStream stream = new FileOutputStream(file);
		XMLEncoder coder = new XMLEncoder(stream);
		coder.writeObject(obj);
		coder.flush();
		coder.close();
	}

    public static <T> void writeObject0(OutputStream stream, T obj) {
        XMLEncoder coder = new XMLEncoder(stream);
        coder.writeObject(obj);
        coder.flush();
        coder.close();

    }

	public static void init() {

	}

	public static <T> T newInstance(Class<T> clazz) {
		return null;
	}

}
